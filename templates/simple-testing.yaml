.testing:
  variables:
    TTY_DISABLED: "true"
    HOST_PREFIX: ""
    IMAGE_PULL_SECRET_USERNAME: ${CI_REGISTRY_CUSTOM_USER}
    IMAGE_PULL_SECRET_PASSWORD: ${CI_REGISTRY_CUSTOM_PASSWORD}
    IMAGE_PULL_SECRET_REGISTRY: ${CI_REGISTRY_CUSTOM_REGISTRY}
    NAMESPACE: ${CI_PROJECT_NAME}-${CI_JOB_NAME_SLUG}-${CI_COMMIT_SHORT_SHA}
    APP_ENV: tests
    CI_APP_TAG: ${CI_COMMIT_SHA}
    APP_VERSION: review-testing-${CI_COMMIT_REF_SLUG}
    WAIT_HELM_DEPLOY: "true"
    COMMAND: "pwd"
    RANCHER_TOKEN: ${RANCHER_RC_TOKEN}
    RANCHER_URL: ${RANCHER_RC_URL}
    RANCHER_PROJECT_ID: ${RANCHER_RC_PROJECT_ID}
    RANCHER_CLUSTER_ID: ${RANCHER_RC_CLUSTER_ID}
    KUBECONFIG_FOR_EXPORT: ${KUBECONFIG_FILE}
    AWS_CLUSTER_NAME: ${AWS_CLUSTER_NAME_RC}
    AWS_CLUSTER_REGION: ${AWS_CLUSTER_REGION_RC}
    AWS_SECRET_ACCESS_KEY_FOR_EXPORT: ${AWS_SECRET_ACCESS_KEY_RC}
    AWS_ACCESS_KEY_ID_FOR_EXPORT: ${AWS_ACCESS_KEY_ID_RC}
  tags:
    - ${RUNNER_BUILD_TAG}
  image: ${FROCK_CLI_IMAGE}
  stage: testing
  before_script:
    - echo "Setting up the environment..."
    - !reference [.pre-deploy-auth, script]
    - export TTY_DISABLED=${TTY_DISABLED}
    - frock down || true
    - kubectl patch ns ${NAMESPACE} -p '{"metadata":{"finalizers":null}}' || true
    - kubectl delete namespace ${NAMESPACE} || true
    - frock up
#  retry: 2
  script:
    - set +e
    - echo ${COMMAND} > run.sh && chmod +x run.sh
    - ./run.sh || EXIT_CODE=$?
    - echo "Exite code:" $EXIT_CODE
    - echo "Cleaning up the environment..."
    - rm -rf ./run.sh
    - frock down
    - exit $EXIT_CODE
  after_script:
    - !reference [.pre-deploy-auth, script]
    - frock down